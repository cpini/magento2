steps:
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: [
    '-c',
    #'docker build -t eu.gcr.io/$PROJECT_ID/magento2-apache24:latest -f k8s-config/apache-docker/Dockerfile --build-arg WEB_SSL_KEY=$$SSL_KEY --build-arg WEB_SSL_CRT=$$SSL_CRT --build-arg WEB_SSL_PEM=$$SSL_PEM .'
    'docker build -t eu.gcr.io/$PROJECT_ID/magento2-apache24:latest -f k8s-config/apache-docker/Dockerfile --build-arg WEB_SSL_CRT=$$SSL_CRT .'
    ]
  #secretEnv: ['SSL_KEY','SSL_CRT','SSL_PEM']
  secretEnv: ['SSL_CRT']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', "eu.gcr.io/$PROJECT_ID/magento2-apache24:latest"]
images: ["eu.gcr.io/$PROJECT_ID/magento2-apache24"]

# echo -n $path_to_enc_file | gcloud kms encrypt --plaintext-file=- \
#   --ciphertext-file=- --location=global --keyring=$keyring-name \
#   --key=$key-name | base64
secrets:
# - kmsKeyName: "projects/magento2-269418/locations/global/keyRings/magento-web-secrets/cryptoKeys/magento-webserver"
#   secretEnv:
#     SSL_KEY: CiQAwLhXnYlnR9B+OjcU1r49DF8VqzIQDgWEZayVwSYtzGjkCpASYADjhmPvdzQE1zmvxQTZA2scCqmWaiwNDZQtin0JfCpE+JxUmzK90+xlYcpcpCyD0s5LSYXQGRTzNqV4+5pno7+ERmfRPR7QLR4gbjRmzsGInQLmcyeFeNJwV/zmHh2pwg==
- kmsKeyName: "projects/magento2-269418/locations/global/keyRings/magento-web-secrets/cryptoKeys/magento-webserver-new-cert"
  secretEnv:
    SSL_CRT: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lKQUs4YTc3djhLcWlvTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ0F4Q3pBSkJnTlYKQkFZVEFrZENNUkV3RHdZRFZRUUREQWh0WVdkbExuaDVlakFlRncweU1EQTJNall4T0RJMU1qbGFGdzB5TWpBNQpNamt4T0RJMU1qbGFNQk14RVRBUEJnTlZCQU1NQ0cxaFoyVXVlSGw2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBeDJnejRadU1sTmF1YkhPRlMxSzMyQjRINUZ2QWoyWW1VNFJlZE9MRXlqRzMKMExlbzdFazFEcWh2WEh2UHNCVG9tUkhhZ1RKdkl2dFk2VXltSG9USXBzdUgwMmVoQm5Kcm5vVlhxUjZ0blA1VQowTDJEd3A1bExLaEVHaGZxMmhLS3RSUGJHV1pqOUlQd3hZYlJ0Rk5ReHNUWnNhWWlHNEdPTndINnVJMHJONE9WCkhMbFZzRzlBMDBFZE9RSEZaQWgxb2h1Qmc1UHhDOXJCZHF3WFhSSEY1QlZYYVB2bjRidW9Xa3pHMWFvczJySWwKTkU2aGZFV0tBbldPWGEwQVZRUW9ySnkzMUFPdnlScTFtWFM4MG9qbFJ3UVByKzJzVkVRTWRjNXZMTGxkc2NRUwpveFE2U3Z4M282RkJaUXhMTnVzRW8reDZXV2owQ084S2x0L3R4NmJjUVFJREFRQUJvNEdxTUlHbk1Eb0dBMVVkCkl3UXpNREdoSktRaU1DQXhDekFKQmdOVkJBWVRBa2RDTVJFd0R3WURWUVFEREFodFlXZGxMbmg1ZW9JSkFNRUgKWXZEcDRyWUNNQWtHQTFVZEV3UUNNQUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQwpNQXNHQTFVZER3UUVBd0lFOERBeUJnTlZIUkVFS3pBcGdnaHRZV2RsTG5oNWVvSU1kM2QzTG0xaFoyVXVlSGw2CmdnOXpkR0YwYVdNdWJXRm5aUzU0ZVhvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLUHhJMjFlNEJFNituWU8KajVSUU52dEdycXNtcUlueDc2TXdKM0hHSkJsRmN6QkRuamQzN3RIRjgyNFNuenVabjlITklIL2hKRW10WCtmZwpUV1lQdWRJOEs4Z1NFUk5tc09QZEhsSC8wUWYzbVl0ck5KNlNJRGZKc1lZMjZQbU1Ob2p0bi9WUVRPbDdzZU12Ck9WYlJUV0hXZktmcytUVE9nWFo4cTUrZDJiMFpIQksxZHM1ZGd0eFc2ekw4T3V2NzFjVzBDRWhSR3JsU2l3RU0KNTZMNzA4SVBFcDdpeEY0cVN1aE9oVXNjZGlBUFJzZFNyQ2x6MElDTXZGTUFnWjJodjdSeFhtZ004TnhJWnJlbQo1b2c3emlSejJNWUlDSWlhSEcxUkFvUzllZjZnRkU0SzJoRHNuMHY5RGR4bVYrcFNqWUhicG0vZlorWTZnUWI1ClhmVktxNGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K